插入排序
基本思想
插入排序是一种简单的排序方法，时间复杂度为 O(n*n)，适用于数据已经排好序，插入一个新数据的情况。其算法的基本思想是，假设待排序的数据存放在数组 a[1...n] 中，增加一个节点 x 用于保存当前数据，进行比较，a[1]即作为有序区，a[2...n] 作为无序区。

从 i=2 起直至 i=n 为止，通过循环遍历，将 a[i] 放在恰当的位置，使 a[1...i] 数据序列有序

x=a[i] 将 x 与前 i-1 个数比较

j=i-1
while(x<a[j])  j-= 1,
  
将 a 数组的元素从 j 位置开始向后移动：

for k in range(j,i+1,-1):  
 
 a[k]=a[k-1]
 a[j]=x

生成包含 n 个数据的有序区
copy
例如，我们现在有一个数组 a=[3 2 4 1 6 5 2 7]，需要使用插入排序进行排列。

排序过程：

第0步：[3] 2 4 1 6 5 2 7
第1步：[2 3] 4 1 6 5 2 7
第2步：[2 3 4] 1 6 5 2 7
第3步：[1 2 3 4] 6 5 2 7
第4步：[1 2 3 4 6] 5 2 7
第5步：[1 2 3 4 5 6] 2 7
第6步：[1 2 2 3 4 5 6] 7
第7步：[1 2 2 3 4 5 6 7]



copy
实现代码
C++ 实现
#include<iostream>
using namespace std;
void insert_sort(int a[], int len) {
    for (int i = 0; i < len; i ++) {
        int x = a[i];  // 待插入元素
        int j = i - 1;  // j指向待排的前一个下标
        while(j >= 0 && x < a[j]) {  // 防止越界  当待排元素小于它前面的元素  把前面的元素向后推进一位
            a[j + 1] = a[j];
            j -= 1;   // 再将j指向最小的元素
        }
        a[j + 1] = x;  //接着待排元素
    }
}
int main()
{
    int a[] = {0,3,2,4,1,6,5,2,7};
    insert_sort(a,9);
    for(auto i : a) cout << i << " ";
    return 0;
}
