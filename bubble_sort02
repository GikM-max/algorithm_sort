冒泡排序
基本思想
所谓冒泡排序就是依次将两个相邻的数进行比较，大的在前面，小的在后面。

即先比较第一个数和第二个数，大数在前，小数在后，然后比较第 2 个数和第 3 个数，直到比较最后两个数
第一趟排序结束后，最小数的数一定在最后
第二趟排序在第一趟的基础上重复上述操作
由于排序过程中总是大数在前，小数在后，相当于气泡上升，所以叫冒泡排序。

大数在前，小数在后排序后得到的是降序

小数在前，大数在后排序后得到的是升序结果

排序过程(降序)

  初始数据：4 5 6 1 2 3
  第一趟：
  比较前两个数，   4比5小，交换位置     5 4 6 1 2 3
  比较第2第3个数， 4比6小，交换位置     5 6 4 1 2 3
  比较第3第4个数， 5比1大，位置不变     5 6 4 1 2 3
  比较第4第5个数， 1比2小，交换位置     5 6 4 2 1 3
  比较最后两个数， 1比3小，交换位置     5 6 4 2 3 1
  第一趟结束

  第二趟重复第一趟过程得到 6 5 4 3 2 1
  排序完毕。
copy
可以发现，第二趟排序结束后，所有数据已经排好序了。实际上，我们在对于一组数据进行冒泡排序时，假如需要排列的数据个数为 n 个，
那么 n-1 趟一定能排好序，比如因为第 2 趟都会有前 2 个小的数排序好，n-1 趟前 n-1 小的数已排好序，最后一个数自然也排好序了。

代码：
#include<iostream>
using namespace std;
void Bubble_sort(int a[], int n) {
    for (int i = 0; i < n - 1; i ++) {  // 遍历数组a
        for(int j = 0; j < n - i - 1; j ++) {   // 待排数组
            if (a[j] > a[j + 1])
                swap(a[j], a[j + 1]);
        }
    }
}
int main()
{
    int a[] = {4,5,6,1,2,3};
    Bubble_sort(a, 6);
    for (auto i : a)  cout << i << " ";
    return 0;
}
